version: '3'

services:
  app:
    image: miniflux/miniflux:latest
    container_name: ${PROJECT_NAME}-app
    ports:
      - ${HOST_PORT}:8080

    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - FETCH_YOUTUBE_WATCH_TIME=${FETCH_YOUTUBE_WATCH_TIME}
      - WORKER_POOL_SIZE=${WORKER_POOL_SIZE}
      - POLLING_FREQUENCY=${POLLING_FREQUENCY}
      - POLLING_PARSING_ERROR_LIMIT=${POLLING_PARSING_ERROR_LIMIT}
      - BASE_URL=${BASE_URL}
      - OAUTH2_PROVIDER=${OAUTH2_PROVIDER}
      - OAUTH2_CLIENT_ID=${OAUTH2_CLIENT_ID}
      - OAUTH2_CLIENT_SECRET=${OAUTH2_CLIENT_SECRET}
      - OAUTH2_REDIRECT_URL=${OAUTH2_REDIRECT_URL}
      - OAUTH2_USER_CREATION=${OAUTH2_USER_CREATION}

    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

    restart: unless-stopped

  db:
    image: postgres:14
    container_name: ${PROJECT_NAME}-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

    restart: unless-stopped
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - "db:/var/lib/postgresql/data"

volumes:
  db:  

